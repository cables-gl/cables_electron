name: nightly dev build

on:
  workflow_dispatch:
  schedule:
    - cron: "0 3 * * *"

env:
  releaseName: ${{ github.run_number }}-dev

jobs:
  build_linux:
    runs-on: ubuntu-latest
    steps:
      - name: checkout cables_dev
        uses: actions/checkout@v4
        with:
          repository: "undev-studio/cables_dev"
          ref: "develop"
          token: ${{ SECRETS.STANDALONE_TOKEN }}
      - name: checkout cables
        uses: actions/checkout@v4
        with:
          repository: "pandrr/cables"
          ref: "develop"
          token: ${{ SECRETS.STANDALONE_TOKEN }}
          path: "cables/"
      - name: checkout extensions
        uses: actions/checkout@v4
        with:
          repository: "undev-studio/cables_extensionops"
          ref: "main"
          token: ${{ SECRETS.STANDALONE_TOKEN }}
          path: "cables/src/ops/extensions"
      - name: checkout cables ui
        uses: actions/checkout@v4
        with:
          repository: "undev-studio/cables_ui"
          ref: "develop"
          token: ${{ SECRETS.STANDALONE_TOKEN }}
          path: "cables_ui/"
      - name: checkout cables standalone
        uses: actions/checkout@v4
        with:
          path: "cables_electron/"
      - name: Configure electron cache
        uses: actions/cache@v3
        with:
          key: electron-builder
          path: ~/Library/Caches/electron-builder
      - name: Configure nvm caches
        uses: actions/cache@v3
        with:
          key: nvm
          path: ~/.nvm/versions
      - name: Configure npm caches
        uses: actions/cache@v3
        with:
          key: npm
          path: ~/.npm/
      - name: build standalone
        shell: bash
        run: ./hook_standalone.sh linux
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_CONFIG_VERSION: ${{ env.releaseName }}
  build_win:
    if: false
    runs-on: windows-latest
    steps:
      - name: checkout cables_dev
        uses: actions/checkout@v4
        with:
          repository: "undev-studio/cables_dev"
          ref: "develop"
          token: ${{ SECRETS.STANDALONE_TOKEN }}
      - name: checkout cables
        uses: actions/checkout@v4
        with:
          repository: "pandrr/cables"
          ref: "develop"
          token: ${{ SECRETS.STANDALONE_TOKEN }}
          path: "cables/"
      - name: checkout extensions
        uses: actions/checkout@v4
        with:
          repository: "undev-studio/cables_extensionops"
          ref: "main"
          token: ${{ SECRETS.STANDALONE_TOKEN }}
          path: "cables/src/ops/extensions"
      - name: checkout cables ui
        uses: actions/checkout@v4
        with:
          repository: "undev-studio/cables_ui"
          ref: "develop"
          token: ${{ SECRETS.STANDALONE_TOKEN }}
          path: "cables_ui/"
      - name: checkout cables standalone
        uses: actions/checkout@v4
        with:
          path: "cables_electron/"
      - name: install python
        uses: actions/setup-python@v5
      - name: Read .nvmrc
        id: nvm
        uses: andstor/file-reader-action@v1
        with:
          path: ".nvmrc"
      - name: install nodejs
        uses: dcodeIO/setup-node-nvm@master
        with:
          node-version: "${{ steps.nvm.outputs.contents }}"
      - name: Configure electron cache
        uses: actions/cache@v3
        with:
          key: electron-builder
          path: ~/Library/Caches/electron-builder
      - name: Configure nvm caches
        uses: actions/cache@v3
        with:
          key: nvm
          path: ~/mynvm/versions
      - name: build standalone
        shell: bash
        run: ./hook_standalone.sh win
        env:
          SETUP_NODE_NVM_NVM: D:\a\_actions\dcodeIO\setup-node-nvm\master\mynvm\nvm
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_CONFIG_VERSION: ${{ env.releaseName }}
  build_mac:
    if: false
    runs-on: macos-14
    steps:
      - name: checkout cables_dev
        uses: actions/checkout@v4
        with:
          repository: "undev-studio/cables_dev"
          ref: "develop"
          token: ${{ SECRETS.STANDALONE_TOKEN }}
      - name: checkout cables
        uses: actions/checkout@v4
        with:
          repository: "pandrr/cables"
          ref: "develop"
          token: ${{ SECRETS.STANDALONE_TOKEN }}
          path: "cables/"
      - name: checkout extensions
        uses: actions/checkout@v4
        with:
          repository: "undev-studio/cables_extensionops"
          ref: "main"
          token: ${{ SECRETS.STANDALONE_TOKEN }}
          path: "cables/src/ops/extensions"
      - name: checkout cables ui
        uses: actions/checkout@v4
        with:
          repository: "undev-studio/cables_ui"
          ref: "develop"
          token: ${{ SECRETS.STANDALONE_TOKEN }}
          path: "cables_ui/"
      - name: checkout cables standalone
        uses: actions/checkout@v4
        with:
          path: "cables_electron/"
      - name: install python
        uses: actions/setup-python@v5
      - name: Read .nvmrc
        id: nvm
        uses: andstor/file-reader-action@v1
        with:
          path: ".nvmrc"
      - name: install nodejs
        uses: dcodeIO/setup-node-nvm@master
        with:
            node-version: "${{ steps.nvm.outputs.contents }}"
      - name: Configure electron cache
        uses: actions/cache@v3
        with:
          key: electron-builder
          path: ~/Library/Caches/electron-builder
      - name: Configure nvm caches
        uses: actions/cache@v3
        with:
          key: nvm
          path: ~/mynvm/versions
      - name: build standalone
        shell: bash
        run: ./hook_standalone.sh mac
        env:
          SETUP_NODE_NVM_NVM: "/Users/runner/mynvm/nvm.sh"
          CSC_LINK: "${{ secrets.APPLE_CERT }}"
          CSC_KEY_PASSWORD: "${{ secrets.APPLE_CERT_PASS }}"
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_CONFIG_VERSION: ${{ env.releaseName }}
